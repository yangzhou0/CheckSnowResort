[{"/Users/yangzhou/Desktop/codePlatoonExercises/lets_snowboard/map/src/index.js":"1","/Users/yangzhou/Desktop/codePlatoonExercises/lets_snowboard/map/src/reportWebVitals.js":"2","/Users/yangzhou/Desktop/codePlatoonExercises/lets_snowboard/map/src/App.js":"3","/Users/yangzhou/Desktop/codePlatoonExercises/lets_snowboard/map/src/pages/mapPage.js":"4","/Users/yangzhou/Desktop/codePlatoonExercises/lets_snowboard/map/src/pages/ResortPage.js":"5","/Users/yangzhou/Desktop/codePlatoonExercises/lets_snowboard/map/src/pages/MapPage.js":"6","/Users/yangzhou/Desktop/codePlatoonExercises/lets_snowboard/map/src/pages/HomePage.js":"7","/Users/yangzhou/Desktop/codePlatoonExercises/lets_snowboard/map/src/api/ResortAPI.js":"8","/Users/yangzhou/Desktop/codePlatoonExercises/lets_snowboard/map/src/components/commentList.js":"9","/Users/yangzhou/Desktop/codePlatoonExercises/lets_snowboard/map/src/components/CommentList.js":"10","/Users/yangzhou/Desktop/codePlatoonExercises/lets_snowboard/map/src/api/CommentAPI.js":"11","/Users/yangzhou/Desktop/codePlatoonExercises/lets_snowboard/map/src/components/Comment.js":"12","/Users/yangzhou/Desktop/codePlatoonExercises/lets_snowboard/map/src/components/Weather.js":"13"},{"size":500,"mtime":1608014649130,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":1608008719309,"results":"16","hashOfConfig":"15"},{"size":530,"mtime":1609013277749,"results":"17","hashOfConfig":"15"},{"size":1971,"mtime":1608246870568,"results":"18","hashOfConfig":"15"},{"size":1879,"mtime":1609010387199,"results":"19","hashOfConfig":"15"},{"size":2078,"mtime":1609016774938,"results":"20","hashOfConfig":"15"},{"size":100,"mtime":1608061127451,"results":"21","hashOfConfig":"15"},{"size":933,"mtime":1608501913104,"results":"22","hashOfConfig":"15"},{"size":924,"mtime":1608626978451,"results":"23","hashOfConfig":"15"},{"size":924,"mtime":1608626978451,"results":"24","hashOfConfig":"15"},{"size":1331,"mtime":1608515664035,"results":"25","hashOfConfig":"15"},{"size":895,"mtime":1609002356583,"results":"26","hashOfConfig":"15"},{"size":1664,"mtime":1609016932309,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"5vvy17",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/yangzhou/Desktop/codePlatoonExercises/lets_snowboard/map/src/index.js",[],["58","59"],"/Users/yangzhou/Desktop/codePlatoonExercises/lets_snowboard/map/src/reportWebVitals.js",[],"/Users/yangzhou/Desktop/codePlatoonExercises/lets_snowboard/map/src/App.js",[],"/Users/yangzhou/Desktop/codePlatoonExercises/lets_snowboard/map/src/pages/mapPage.js",["60","61","62"],"/Users/yangzhou/Desktop/codePlatoonExercises/lets_snowboard/map/src/pages/ResortPage.js",["63","64","65","66"],"/Users/yangzhou/Desktop/codePlatoonExercises/lets_snowboard/map/src/pages/MapPage.js",["67","68","69","70"],"import React,{useState, useEffect} from 'react'\nimport ReactMapGL, {Marker,Popup} from 'react-map-gl'\nimport { BrowserRouter as Router, Route, Link} from 'react-router-dom';\nimport { fetchResorts} from '../api/ResortAPI';\nimport './css/mapPageCss.css'\nimport snowboardLogo from '../assets/icons/snowboard.png'\nexport default function MapPage(){\n  const [viewport, setViewport] = useState({\n    width: \"100vw\",\n    height: \"100vh\",\n    latitude: 39.7392,\n    longitude: -104.9903,\n    zoom: 10\n  });\n\n  const [selectedResort, setSelectedResort] = useState(null);\n  const [resortsData, setResortsData] = useState([]);\n\n  const handleClick = (resort)=>{\n    setSelectedResort(resort)\n  }\n\n  useEffect(()=>{\n    const listener = (e)=>{\n      if(e.key == 'Escape'){\n        setSelectedResort(null)\n      }\n    }\n    window.addEventListener('keydown',listener)\n    fetchResorts().then(resorts => setResortsData(resorts))\n    return ()=>{\n      window.removeEventListener('keydown',listener)\n    }\n\n  },[])\n\n  return ( \n    <div>\n      <ReactMapGL\n      {...viewport}\n      mapStyle = 'mapbox://styles/yangzhou93/ckipmnmy613zi17ti10exzems'\n      onViewportChange={nextViewport => setViewport(nextViewport)}\n      mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_ACCESS_TOKEN}>\n      {resortsData.map((resort,index)=>\n        <Marker key = {index} latitude = {resort.latitude} longitude = {resort.longitude}>\n          <button className = 'marker-btn' onClick = {(e)=>{e.preventDefault();handleClick(resort)}}>\n            <img src = {snowboardLogo} alt ='resort' />\n          </button>\n        </Marker>\n      )}\n        {selectedResort && <Popup latitude = {selectedResort.latitude} longitude = {selectedResort.longitude} closeOnClick={false} onClose={() => setSelectedResort(null)}>\n          <div>\n            <Link to={`/resorts/${selectedResort.name}`}>{selectedResort.name}</Link>\n            <p>{selectedResort.description}</p>\n            <a href = {selectedResort.website } target=\"_blank\">website</a>\n          </div>\n        </Popup>}\n      </ReactMapGL>\n    </div>\n  );\n}","/Users/yangzhou/Desktop/codePlatoonExercises/lets_snowboard/map/src/pages/HomePage.js",[],"/Users/yangzhou/Desktop/codePlatoonExercises/lets_snowboard/map/src/api/ResortAPI.js",["71"],"/Users/yangzhou/Desktop/codePlatoonExercises/lets_snowboard/map/src/components/commentList.js",["72"],"/Users/yangzhou/Desktop/codePlatoonExercises/lets_snowboard/map/src/components/CommentList.js",["73","74"],"import React,{useState, useEffect} from 'react'\nimport Comment from './Comment'\n\nimport { ListGroup, ListGroupItem,Button } from 'reactstrap';\n\nexport default function CommentList({comments,handleLikeComment,handleUpdateComment,handleDeleteComment,handleAddComment}) {\n  return (\n    <div>\n      <h2>comments:</h2>\n      <ListGroup>\n        {comments && comments.sort((a,b)=>{return b.likes - a.likes}).map((comment) => (\n          <ListGroupItem>\n            <Comment comment = {comment} handleLikeComment={handleLikeComment} handleUpdateComment={handleUpdateComment} handleDeleteComment={handleDeleteComment} handleAddComment={handleAddComment}/>\n          </ListGroupItem>\n        ))}\n      </ListGroup>\n      <div>\n        <textarea id = {`newComment`}></textarea>  \n        <Button onClick = {()=>{handleAddComment({body:document.getElementById(`newComment`).value})}}>Add Comment</Button>\n      </div>\n    </div>\n  )\n}","/Users/yangzhou/Desktop/codePlatoonExercises/lets_snowboard/map/src/api/CommentAPI.js",[],"/Users/yangzhou/Desktop/codePlatoonExercises/lets_snowboard/map/src/components/Comment.js",["75"],"import React,{useState, useEffect} from 'react'\nimport { Button } from 'reactstrap';\n\nexport default function Comment({comment,handleLikeComment,handleUpdateComment,handleDeleteComment,handleAddComment}) {\n  const [edit, setEdit] = useState(false);\n  return (\n    <div>\n      {!edit ? \n        <div><span onDoubleClick={()=> setEdit(!edit)}>{comment.body}</span> <Button onClick = {()=>{handleLikeComment(comment.id)}} >like {comment.likes}</Button></div>\n      :\n        <div>\n          <textarea id = {`textarea${comment.id}`}onDoubleClick={()=> setEdit(!edit)}>{comment.body}</textarea> \n          <Button onClick = {()=>{handleUpdateComment({id:comment.id,body:document.getElementById(`textarea${comment.id}`).value}); setEdit(!edit)}}>Update</Button>\n          <Button onClick = {()=>{handleDeleteComment(comment.id);setEdit(!edit)}}>Delete</Button>\n        </div>\n      }\n    </div>\n  )\n}\n","/Users/yangzhou/Desktop/codePlatoonExercises/lets_snowboard/map/src/components/Weather.js",[],{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":2,"column":35,"nodeType":"82","messageId":"83","endLine":2,"endColumn":40},{"ruleId":"80","severity":1,"message":"84","line":2,"column":42,"nodeType":"82","messageId":"83","endLine":2,"endColumn":50},{"ruleId":"85","severity":1,"message":"86","line":26,"column":16,"nodeType":"87","messageId":"88","endLine":26,"endColumn":18},{"ruleId":"80","severity":1,"message":"89","line":2,"column":27,"nodeType":"82","messageId":"83","endLine":2,"endColumn":33},{"ruleId":"80","severity":1,"message":"81","line":2,"column":35,"nodeType":"82","messageId":"83","endLine":2,"endColumn":40},{"ruleId":"80","severity":1,"message":"90","line":2,"column":42,"nodeType":"82","messageId":"83","endLine":2,"endColumn":46},{"ruleId":"91","severity":1,"message":"92","line":14,"column":5,"nodeType":"93","endLine":14,"endColumn":7,"suggestions":"94"},{"ruleId":"80","severity":1,"message":"89","line":3,"column":27,"nodeType":"82","messageId":"83","endLine":3,"endColumn":33},{"ruleId":"80","severity":1,"message":"81","line":3,"column":35,"nodeType":"82","messageId":"83","endLine":3,"endColumn":40},{"ruleId":"85","severity":1,"message":"86","line":25,"column":16,"nodeType":"87","messageId":"88","endLine":25,"endColumn":18},{"ruleId":"95","severity":1,"message":"96","line":55,"column":49,"nodeType":"97","endLine":55,"endColumn":64},{"ruleId":"85","severity":1,"message":"86","line":12,"column":55,"nodeType":"87","messageId":"88","endLine":12,"endColumn":57},{"ruleId":"80","severity":1,"message":"98","line":1,"column":17,"nodeType":"82","messageId":"83","endLine":1,"endColumn":26},{"ruleId":"80","severity":1,"message":"99","line":1,"column":15,"nodeType":"82","messageId":"83","endLine":1,"endColumn":23},{"ruleId":"80","severity":1,"message":"100","line":1,"column":25,"nodeType":"82","messageId":"83","endLine":1,"endColumn":34},{"ruleId":"80","severity":1,"message":"100","line":1,"column":25,"nodeType":"82","messageId":"83","endLine":1,"endColumn":34},"no-native-reassign",["101"],"no-negated-in-lhs",["102"],"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Router' is defined but never used.","'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'resortName'. Either include it or remove the dependency array.","ArrayExpression",["103"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'Component' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"104","fix":"105"},"Update the dependencies array to be: [resortName]",{"range":"106","text":"107"},[618,620],"[resortName]"]