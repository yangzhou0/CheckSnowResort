[{"/Users/yangzhou/Desktop/codePlatoonExercises/lets_snowboard/map/src/index.js":"1","/Users/yangzhou/Desktop/codePlatoonExercises/lets_snowboard/map/src/reportWebVitals.js":"2","/Users/yangzhou/Desktop/codePlatoonExercises/lets_snowboard/map/src/App.js":"3","/Users/yangzhou/Desktop/codePlatoonExercises/lets_snowboard/map/src/pages/mapPage.js":"4","/Users/yangzhou/Desktop/codePlatoonExercises/lets_snowboard/map/src/pages/ResortPage.js":"5","/Users/yangzhou/Desktop/codePlatoonExercises/lets_snowboard/map/src/pages/MapPage.js":"6","/Users/yangzhou/Desktop/codePlatoonExercises/lets_snowboard/map/src/pages/HomePage.js":"7","/Users/yangzhou/Desktop/codePlatoonExercises/lets_snowboard/map/src/api/ResortAPI.js":"8","/Users/yangzhou/Desktop/codePlatoonExercises/lets_snowboard/map/src/api/CommentAPI.js":"9","/Users/yangzhou/Desktop/codePlatoonExercises/lets_snowboard/map/src/components/Comment.js":"10","/Users/yangzhou/Desktop/codePlatoonExercises/lets_snowboard/map/src/components/Weather.js":"11","/Users/yangzhou/Desktop/codePlatoonExercises/lets_snowboard/map/src/components/CommentBox.js":"12","/Users/yangzhou/Desktop/codePlatoonExercises/lets_snowboard/map/src/components/CommentForm.js":"13"},{"size":500,"mtime":1608014649130,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":1608008719309,"results":"16","hashOfConfig":"15"},{"size":530,"mtime":1609013277749,"results":"17","hashOfConfig":"15"},{"size":1971,"mtime":1608246870568,"results":"18","hashOfConfig":"15"},{"size":1921,"mtime":1609179786399,"results":"19","hashOfConfig":"15"},{"size":2078,"mtime":1609017244422,"results":"20","hashOfConfig":"15"},{"size":100,"mtime":1608061127451,"results":"21","hashOfConfig":"15"},{"size":933,"mtime":1608501913104,"results":"22","hashOfConfig":"15"},{"size":1331,"mtime":1608515664035,"results":"23","hashOfConfig":"15"},{"size":1368,"mtime":1609730542533,"results":"24","hashOfConfig":"15"},{"size":1685,"mtime":1609017181081,"results":"25","hashOfConfig":"15"},{"size":2273,"mtime":1609720252296,"results":"26","hashOfConfig":"15"},{"size":691,"mtime":1609720258387,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"5vvy17",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"30"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"/Users/yangzhou/Desktop/codePlatoonExercises/lets_snowboard/map/src/index.js",[],["59","60"],"/Users/yangzhou/Desktop/codePlatoonExercises/lets_snowboard/map/src/reportWebVitals.js",[],"/Users/yangzhou/Desktop/codePlatoonExercises/lets_snowboard/map/src/App.js",[],"/Users/yangzhou/Desktop/codePlatoonExercises/lets_snowboard/map/src/pages/mapPage.js",["61","62","63"],"/Users/yangzhou/Desktop/codePlatoonExercises/lets_snowboard/map/src/pages/ResortPage.js",["64","65","66","67"],"import React,{useState, useEffect} from 'react'\nimport { BrowserRouter as Router, Route, Link} from 'react-router-dom';\nimport { fetchResortByName} from '../api/ResortAPI';\nimport { likeComment,editComment, deleteComment,addComment} from '../api/CommentAPI';\nimport CommentBox from '../components/CommentBox'\nimport Weather from '../components/Weather'\nimport './css/resortPage.css'\n\nexport default function ResortPage(props){\n  const [resort, setResort] = useState(Object());\n  let resortName = props.match.params.resortName\n  useEffect(()=>{\n    fetchResortByName(resortName).then(resort => setResort(resort))\n  },[])\n  // [] as the second argument will only call useEffect once when component is rendered\n  // for the first time, anytime after that this useEffect will not be called. \n  // in this case, a change in state will not trigger re-render\n  // this is minicing componentDidMount\n  \n  const handleLikeComment = (commentID)=>{\n    likeComment(commentID).then(()=>fetchResortByName(resortName)).then(resort => setResort(resort))\n  }\n\n  const handleUpdateComment = (commentObject) =>{\n    editComment(commentObject).then(()=>fetchResortByName(resortName)).then(resort => setResort(resort))\n  }\n  \n  const handleDeleteComment = (commentID) => {\n    deleteComment(commentID).then(()=>fetchResortByName(resortName)).then(resort => setResort(resort))\n  }\n\n  const handleAddComment = (commentObject) => {\n    commentObject.resort = resort.id\n    console.log('comment obj',commentObject)\n    addComment(commentObject).then(()=>fetchResortByName(resortName)).then(resort => setResort(resort))\n  }\n\n  return (\n    <div>\n      <Weather latitude = {resort.latitude} longitude = {resort.longitude} />\n      <CommentBox comments={resort.comments} handleLikeComment={handleLikeComment} handleUpdateComment={handleUpdateComment} handleDeleteComment={handleDeleteComment} handleAddComment={handleAddComment}/>\n    </div>\n  )\n}\n","/Users/yangzhou/Desktop/codePlatoonExercises/lets_snowboard/map/src/pages/MapPage.js",["68","69","70","71"],"import React,{useState, useEffect} from 'react'\nimport ReactMapGL, {Marker,Popup} from 'react-map-gl'\nimport { BrowserRouter as Router, Route, Link} from 'react-router-dom';\nimport { fetchResorts} from '../api/ResortAPI';\nimport './css/mapPageCss.css'\nimport snowboardLogo from '../assets/icons/snowboard.png'\nexport default function MapPage(){\n  const [viewport, setViewport] = useState({\n    width: \"100vw\",\n    height: \"100vh\",\n    latitude: 39.7392,\n    longitude: -104.9903,\n    zoom: 10\n  });\n\n  const [selectedResort, setSelectedResort] = useState(null);\n  const [resortsData, setResortsData] = useState([]);\n\n  const handleClick = (resort)=>{\n    setSelectedResort(resort)\n  }\n\n  useEffect(()=>{\n    const listener = (e)=>{\n      if(e.key == 'Escape'){\n        setSelectedResort(null)\n      }\n    }\n    window.addEventListener('keydown',listener)\n    fetchResorts().then(resorts => setResortsData(resorts))\n    return ()=>{\n      window.removeEventListener('keydown',listener)\n    }\n\n  },[])\n\n  return ( \n    <div>\n      <ReactMapGL\n      {...viewport}\n      mapStyle = 'mapbox://styles/yangzhou93/ckipmnmy613zi17ti10exzems'\n      onViewportChange={nextViewport => setViewport(nextViewport)}\n      mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_ACCESS_TOKEN}>\n      {resortsData.map((resort,index)=>\n        <Marker key = {index} latitude = {resort.latitude} longitude = {resort.longitude}>\n          <button className = 'marker-btn' onClick = {(e)=>{e.preventDefault();handleClick(resort)}}>\n            <img src = {snowboardLogo} alt ='resort' />\n          </button>\n        </Marker>\n      )}\n        {selectedResort && <Popup latitude = {selectedResort.latitude} longitude = {selectedResort.longitude} closeOnClick={false} onClose={() => setSelectedResort(null)}>\n          <div>\n            <Link to={`/resorts/${selectedResort.name}`}>{selectedResort.name}</Link>\n            <p>{selectedResort.description}</p>\n            <a href = {selectedResort.website } target=\"_blank\">website</a>\n          </div>\n        </Popup>}\n      </ReactMapGL>\n    </div>\n  );\n}","/Users/yangzhou/Desktop/codePlatoonExercises/lets_snowboard/map/src/pages/HomePage.js",[],"/Users/yangzhou/Desktop/codePlatoonExercises/lets_snowboard/map/src/api/ResortAPI.js",["72"],"const BASE_URL = 'http://127.0.0.1:8000/api/resorts';\n\nconst fetchResortByID = async (resortID) => {\n  const response = await fetch(`${BASE_URL}/${resortID}`);\n  const data = await response.json();\n  return data;\n};\n\nconst fetchResortByName = async (resort_name) => {\n  const response = await fetch(`${BASE_URL}`);\n  const resortsData = await response.json();\n  const data = resortsData.find(resort => resort.name == resort_name)\n  return data;\n};\n\nconst fetchResorts = async (filters = null) => {\n  const url = filters ? `${BASE_URL}?filter={\"where\":${filters}}` : BASE_URL;\n  const response = await fetch(url);\n  const data = await response.json();\n  return data;\n};\n\nconst likeResort = async (resortID) => {\n  return fetch(`${BASE_URL}/${resortID}/like`, {\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    method: \"POST\"\n  });\n}\n\n\nexport {\n  fetchResortByID,\n  fetchResortByName,\n  fetchResorts,\n  likeResort\n};\n","/Users/yangzhou/Desktop/codePlatoonExercises/lets_snowboard/map/src/api/CommentAPI.js",[],"/Users/yangzhou/Desktop/codePlatoonExercises/lets_snowboard/map/src/components/Comment.js",["73"],"/Users/yangzhou/Desktop/codePlatoonExercises/lets_snowboard/map/src/components/Weather.js",[],"/Users/yangzhou/Desktop/codePlatoonExercises/lets_snowboard/map/src/components/CommentBox.js",["74","75","76","77"],"import React,{useState, useEffect} from 'react'\nimport Comment from './Comment'\nimport './css/commentBoxComponent.scss'\nimport CommentForm from './CommentForm'\nimport { ListGroup, ListGroupItem,Button } from 'reactstrap';\n\nexport default function CommentBox({comments,handleLikeComment,handleUpdateComment,handleDeleteComment,handleAddComment}) {\n  const [showComments,setShowComments] = useState(false)\n  let buttonText = 'Show Comments';\n  const getComments = ()=>{\n    return <div>\n      {comments && comments.sort((a,b)=>{return b.likes - a.likes}).map((comment) => (\n          <Comment comment = {comment} handleLikeComment={handleLikeComment} handleUpdateComment={handleUpdateComment} handleDeleteComment={handleDeleteComment} />\n      ))}\n    </div>\n  }\n\n  const commentNodes = getComments();\n\n  if (showComments) {\n    buttonText = 'Hide Comments';\n  }\n  const getCommentsTitle = (commentCount) => {\n    if (commentCount === 0) {\n      return 'No comments yet';\n    } else if (commentCount === 1) {\n      return \"1 comment\";\n    } else {\n      return `${commentCount} comments`;\n    }\n  }\n  \n  return(\n    <div className=\"comment-box\">\n        <h2>Join the Discussion!</h2>\n        <CommentForm handleAddComment={handleAddComment}/>\n        <button id=\"comment-reveal\" onClick={()=>{setShowComments(!showComments)}}>\n          {buttonText}\n        </button>\n        <h3>Comments</h3>\n        {comments && \n        <h4 className=\"comment-count\">\n          {getCommentsTitle(comments.length)}\n        </h4>}\n        {showComments && commentNodes}\n    </div>  \n  )\n  // return (\n  //   <div>\n  //     <h2>comments:</h2>\n  //     <ListGroup>\n  //       {comments && comments.sort((a,b)=>{return b.likes - a.likes}).map((comment) => (\n  //         <ListGroupItem>\n  //           <Comment comment = {comment} handleLikeComment={handleLikeComment} handleUpdateComment={handleUpdateComment} handleDeleteComment={handleDeleteComment} handleAddComment={handleAddComment}/>\n  //         </ListGroupItem>\n  //       ))}\n  //     </ListGroup>\n  //     <div>\n  //       <textarea id = {`newComment`}></textarea>  \n  //       <Button onClick = {()=>{handleAddComment({body:document.getElementById(`newComment`).value})}}>Add Comment</Button>\n  //     </div>\n  //   </div>\n  // )\n}","/Users/yangzhou/Desktop/codePlatoonExercises/lets_snowboard/map/src/components/CommentForm.js",[],{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":2,"column":35,"nodeType":"84","messageId":"85","endLine":2,"endColumn":40},{"ruleId":"82","severity":1,"message":"86","line":2,"column":42,"nodeType":"84","messageId":"85","endLine":2,"endColumn":50},{"ruleId":"87","severity":1,"message":"88","line":26,"column":16,"nodeType":"89","messageId":"90","endLine":26,"endColumn":18},{"ruleId":"82","severity":1,"message":"91","line":2,"column":27,"nodeType":"84","messageId":"85","endLine":2,"endColumn":33},{"ruleId":"82","severity":1,"message":"83","line":2,"column":35,"nodeType":"84","messageId":"85","endLine":2,"endColumn":40},{"ruleId":"82","severity":1,"message":"92","line":2,"column":42,"nodeType":"84","messageId":"85","endLine":2,"endColumn":46},{"ruleId":"93","severity":1,"message":"94","line":14,"column":5,"nodeType":"95","endLine":14,"endColumn":7,"suggestions":"96"},{"ruleId":"82","severity":1,"message":"91","line":3,"column":27,"nodeType":"84","messageId":"85","endLine":3,"endColumn":33},{"ruleId":"82","severity":1,"message":"83","line":3,"column":35,"nodeType":"84","messageId":"85","endLine":3,"endColumn":40},{"ruleId":"87","severity":1,"message":"88","line":25,"column":16,"nodeType":"89","messageId":"90","endLine":25,"endColumn":18},{"ruleId":"97","severity":1,"message":"98","line":55,"column":49,"nodeType":"99","endLine":55,"endColumn":64},{"ruleId":"87","severity":1,"message":"88","line":12,"column":55,"nodeType":"89","messageId":"90","endLine":12,"endColumn":57},{"ruleId":"82","severity":1,"message":"100","line":1,"column":25,"nodeType":"84","messageId":"85","endLine":1,"endColumn":34},{"ruleId":"82","severity":1,"message":"100","line":1,"column":25,"nodeType":"84","messageId":"85","endLine":1,"endColumn":34},{"ruleId":"82","severity":1,"message":"101","line":5,"column":10,"nodeType":"84","messageId":"85","endLine":5,"endColumn":19},{"ruleId":"82","severity":1,"message":"102","line":5,"column":21,"nodeType":"84","messageId":"85","endLine":5,"endColumn":34},{"ruleId":"82","severity":1,"message":"103","line":5,"column":35,"nodeType":"84","messageId":"85","endLine":5,"endColumn":41},"no-native-reassign",["104"],"no-negated-in-lhs",["105"],"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Router' is defined but never used.","'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'resortName'. Either include it or remove the dependency array.","ArrayExpression",["106"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'useEffect' is defined but never used.","'ListGroup' is defined but never used.","'ListGroupItem' is defined but never used.","'Button' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"107","fix":"108"},"Update the dependencies array to be: [resortName]",{"range":"109","text":"110"},[616,618],"[resortName]"]